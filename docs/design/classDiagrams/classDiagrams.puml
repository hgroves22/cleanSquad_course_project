@startuml classDiagrams

class Robot {
    - isActive: bool
    - isBroken: bool
    - robotType: string
    - robotSize: string
    - batteryLife: int
    - probFailure: int
    - destination: Room
    - currentTask: Task
    - completedTasks: vector<Task>
    + getActive(): bool
    + getBrokenStatus(): bool
    + setBrokenStatus(brokenStatus: bool): void
    + getRobotType(): string
    + getRobotSize(): string
    + getBattery(): int
    + charge(): void
    + getDestination(): Room
    + setDestination(destination: Room): void
    + getCompletedTasks(): vector<Task>
    + getTask(): Task
    + setTask(task: Task): void
}

class Room {
    - int mopTime
    - int vacuumTime
    - int scrubTime
    - int mopping
    - int vacuum
    - int scrubber
    - string size
    - int area

    + setSize(): void
    + getSize(): int
    + getMopTime(): int
    + getVacuumTime(): int
    + getScrubTime(): int
    + getNumMopping(): int
    + getNumVacuum(): int
    + getNumScrubber(): int
    + getWaitingRooms(): vector<Room>
    + getCompletedRooms(): vector<Room>
    + getCurrentCleaning(): vector<Room>
    
}

class Simulation {
    - availableRobots: vector<Robot>
    - unavailableRobots: vector<Robot>
    - roomList: vector<Room>
    - vector<Room> waitingQueue
    - vector<Room> cleaningRooms
    - vector<Room> completeRooms

    + runSimulation(): void
    + getInput(): void
    + createTask(): Task
    + getAvailableRobots(): vector<Robot>
    + getUnavailableRobots(): vector<Robot>
    + getRoomList(): vector<Room>
}

class Task {
  - numRobots: int
  - workingRobots: vector<Robot>
  - time: int
  - taskLocation: Room
  - isCompleted: boolean
  + setNumRobots(numRobots: int)
  + getNumRobots(): int
  + addWorkingRobot(robot: Robot)
  + removeWorkingRobot(robot: Robot)
  + setTime(time: int)
  + getTime(): int
  + setTaskLocation(location: Room)
  + getTaskLocation(): Room
  + setIsCompleted(isCompleted: boolean)
  + getIsCompleted(): boolean
}

Robot "0..." o--> "0...1" Room
Robot "0..." o--> "0...1" Task


@enduml